type Parent {
    id: ID!
    familyName: String!
    givenName: String!
    phoneNumbers:[String!]!
    address: String
}
type ParentWithChildren{
    id: ID!
    familyName: String!
    givenName: String!
    phoneNumbers:[String!]!
    address: String
    childDtos: [Child]
}

type ParentWithEmergencyContact{
    parentDto : Parent
    isEmergencyContact: Boolean
}
input ParentCreateDtoInput {
    familyName: String!
    givenName: String!
    phoneNumbers:[String!]!
    address: String
    childId: String
}
input ParentUpdateDtoInput{
    id: ID!
    familyName: String!
    givenName: String!
    phoneNumbers:[String!]!
    address: String
    childIds: [String]
}

extend type Query {
    getAllParents: [Parent!]!
    getParentById(id: String!): ParentWithChildren!
    getPotentialChildren(name: String!): [Child]
}
extend type Mutation{
    addParent(parent: ParentCreateDtoInput!): Parent!
    updateParent(parent: ParentUpdateDtoInput!): Parent!
    deleteParent(id: String!): Parent!
}